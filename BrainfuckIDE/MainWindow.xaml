<Window x:Class="BrainfuckIDE.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:editor="clr-namespace:BrainfuckIDE.Editor.Controls"
        xmlns:vm="clr-namespace:BrainfuckIDE.Controls.ViewModels"
        xmlns:view="clr-namespace:BrainfuckIDE.Controls.Views" 
        xmlns:dd="urn:gong-wpf-dragdrop"         
        xmlns:local="clr-namespace:BrainfuckIDE"
        xmlns:ctrls="clr-namespace:BrainfuckIDE.Controls"
        xmlns:utils="clr-namespace:WpfUtils;assembly=WpfUtils"
        xmlns:interpreter="clr-namespace:Interpreter;assembly=Interpreter"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Brainfuck IDE" Height="650" Width="1000"
        d:DataContext="{d:DesignInstance {x:Type vm:InterpreterRunningViewModel}}"
        dd:DragDrop.IsDropTarget="True"  
        dd:DragDrop.DropHandler="{Binding EditrVM}" 
        Background="Transparent"
        WindowStyle="None" 
        Loaded="Window_Loaded"
        AllowsTransparency="True" MinWidth="300" MinHeight="40" Icon="Resource/BrainfuckIdeIcon.ico"
        >

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" Executed="{x:Static Member=utils:WindowBehavior.WindowMinimizeEvent}"/>
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}"  Executed="{x:Static Member=utils:WindowBehavior.WindowRestoreEvent}"/>
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" Executed="{x:Static Member=utils:WindowBehavior.WindowMaximizeEvent}"/>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}"    Executed="{x:Static Member=utils:WindowBehavior.WindowCloseEvent}"/>
    </Window.CommandBindings>

    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <Window.DataContext>
        <vm:InterpreterRunningViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary Source="/ControlStyle/StyleDictionary.xaml"/>
    </Window.Resources>

    <Border BorderBrush="Transparent" Background="#FF3F3F46">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="{x:Static WindowState.Maximized}">
                        <Setter Property="BorderThickness" Value="7"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DockPanel>
                <StackPanel DockPanel.Dock="Right"
                    Margin="0,0,5,0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
                    <Button Content="0" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                    <Button Content="1" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MaximizeWindowCommand}">
                        <Button.Visibility>
                            <Binding RelativeSource="{RelativeSource AncestorType=Window}"  
                         Path="WindowState"  
                         Mode="OneWay"  
                         Converter="{ctrls:EqualsToVisibleConveter}">
                                <Binding.ConverterParameter>
                                    <WindowState>Normal</WindowState>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Button.Visibility>
                    </Button>
                    <Button Content="2" Style="{DynamicResource CaptionButtonStyleKey}"  Command="{x:Static SystemCommands.RestoreWindowCommand}">
                        <Button.Visibility>
                            <Binding RelativeSource="{RelativeSource AncestorType=Window}"  
                         Path="WindowState"  
                         Mode="OneWay"  
                         Converter="{ctrls:EqualsToVisibleConveter}">
                                <Binding.ConverterParameter>
                                    <WindowState>Maximized</WindowState>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Button.Visibility>
                    </Button>
                    <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                </StackPanel>
                <Image Margin="10,4" Stretch="Uniform" Source="{Binding Icon ,Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" RenderTransformOrigin="0.5,0.5">
                </Image>
                <Menu Background="#FF3F3F46" Foreground="White" Margin="0,2,2,2" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
              WindowChrome.IsHitTestVisibleInChrome="True">
                    <!--<MenuItem Header="File(_F)"  Background="#FF3F3F46" Foreground="White">
                <MenuItem Header="Empty"  Background="#FF3F3F46"/>
            </MenuItem>-->
                    <MenuItem Header="Refact(_R)" Foreground="White" Template="{StaticResource MenuItemControlTemplate}">
                        <MenuItem Header="CopySimplyCodeToClipbord"  Background="#FF3F3F46" Command="{Binding CopySimplyCodeToClipbordCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Window(_W)" Foreground="White" Template="{StaticResource MenuItemControlTemplate}">
                        <MenuItem Header="Print text code geter window"  Background="#FF3F3F46" Command="{Binding OpenPrintTextCodeGeterWindowCommand}"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <Grid Grid.Row="2" Margin="5,0,5,5"  Background="#FF2D2D30" >
                <Grid.InputBindings>
                    <KeyBinding Gesture="Ctrl+S" Command="{Binding EditrVM.SaveCommand}"/>
                    <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding EditrVM.SaveAsCommand}"/>
                    <KeyBinding Gesture="F5" Command="{Binding RunCommand}" CommandParameter="{x:Static interpreter:RunType.Nomal}"/>
                    <KeyBinding Gesture="Shift+F5" Command="{Binding RaiseStopReqestCommand}"/>
                    <KeyBinding Gesture="F11" Command="{Binding RunCommand}" CommandParameter="{x:Static interpreter:RunType.OneStep}"/>
                    <KeyBinding Gesture="F10" Command="{Binding RunCommand}" CommandParameter="{x:Static interpreter:RunType.Line}"/>
                </Grid.InputBindings>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="100"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="300"/>
                </Grid.ColumnDefinitions>
                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="#FF3F3F46" />
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="100"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition MinHeight="100"/>
                    </Grid.RowDefinitions>
                    <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"  Background="#FF3F3F46"/>
                    <editor:EditorLayer Grid.Row="0" DataContext="{Binding EditrVM, Mode=OneTime}"/>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth ="100"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition MinWidth="0" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <view:MemoryViewLayer  DataContext="{Binding MemoryVM, Mode=OneTime}" Margin="5"/>
                        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"  Background="#FF3F3F46"/>
                        <Border Grid.Column="2" Background="#FF2D2D30"></Border>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="170"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition MinHeight="100"/>
                    </Grid.RowDefinitions>
                    <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch"  Background="#FF3F3F46"/>
                    <view:CommandPanel Grid.Row="0"/>
                    <view:TextInputViewPanel Grid.Row="1" Margin="10" DataContext="{Binding TextImputDataVM, Mode=OneTime}"/>
                    <view:ResultViewLayer Grid.Row="3" Margin="5" DataContext="{Binding ResultTextVM, Mode=OneTime}"/>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
